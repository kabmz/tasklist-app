{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\tasklist-app\\\\src\\\\Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Task({\n  task,\n  deleteTask\n}) {\n  _s();\n  const [showSubtasks, setShowSubtasks] = useState(false);\n  const handleSubtaskDone = subtaskId => {\n    // Handle sub-task completion\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: `Task ${task.id}: `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), task.description, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"subtasks-toggle\",\n        onClick: () => setShowSubtasks(!showSubtasks),\n        children: \"Sub-Tasks (clickable)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), showSubtasks && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"subtasks-list\",\n      children: task.subtasks.map(subtask => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: `o ${subtask.description}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), !subtask.done && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"done-subtask\",\n          onClick: () => handleSubtaskDone(subtask.id),\n          children: \"DONE (clickable)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, subtask.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteTask(task.id),\n      className: \"btn btn-danger btn-sm\",\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"ViK38KbsT51NgfmIB8CgYwfOw00=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Task","task","deleteTask","_s","showSubtasks","setShowSubtasks","handleSubtaskDone","subtaskId","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","subtasks","map","subtask","done","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/tasklist-app/src/Task.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Task({ task, deleteTask }) {\r\n  const [showSubtasks, setShowSubtasks] = useState(false);\r\n\r\n  const handleSubtaskDone = (subtaskId) => {\r\n    // Handle sub-task completion\r\n  };\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <div>\r\n        <strong>{`Task ${task.id}: `}</strong>\r\n        {task.description}\r\n        <span className=\"subtasks-toggle\" onClick={() => setShowSubtasks(!showSubtasks)}>\r\n          Sub-Tasks (clickable)\r\n        </span>\r\n      </div>\r\n      {showSubtasks && (\r\n        <ul className=\"subtasks-list\">\r\n          {task.subtasks.map((subtask) => (\r\n            <li key={subtask.id}>\r\n              <span>{`o ${subtask.description}`}</span>\r\n              {!subtask.done && (\r\n                <span className=\"done-subtask\" onClick={() => handleSubtaskDone(subtask.id)}>\r\n                  DONE (clickable)\r\n                </span>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <button onClick={() => deleteTask(task.id)} className=\"btn btn-danger btn-sm\">\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMS,iBAAiB,GAAIC,SAAS,IAAK;IACvC;EAAA,CACD;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBV,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAU,QAAOR,IAAI,CAACS,EAAG;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,EACrCb,IAAI,CAACc,WAAW,eACjBhB,OAAA;QAAMS,SAAS,EAAC,iBAAiB;QAACQ,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAAC,CAACD,YAAY,CAAE;QAAAK,QAAA,EAAC;MAEjF;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACLV,YAAY,iBACXL,OAAA;MAAIS,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1BR,IAAI,CAACgB,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBACzBpB,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,EAAQ,KAAIU,OAAO,CAACJ,WAAY;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACxC,CAACK,OAAO,CAACC,IAAI,iBACZrB,OAAA;UAAMS,SAAS,EAAC,cAAc;UAACQ,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAACa,OAAO,CAACT,EAAE,CAAE;UAAAD,QAAA,EAAC;QAE7E;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACP;MAAA,GANMK,OAAO,CAACT,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL,eACDf,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAACD,IAAI,CAACS,EAAE,CAAE;MAACF,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAE9E;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACX,EAAA,CAnCQH,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAqCb,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}